{"remainingRequest":"/home/runner/work/U2_Modelos_Desarrollo_Economico/U2_Modelos_Desarrollo_Economico/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U2_Modelos_Desarrollo_Economico/U2_Modelos_Desarrollo_Economico/node_modules/pug-plain-loader/index.js!/home/runner/work/U2_Modelos_Desarrollo_Economico/U2_Modelos_Desarrollo_Economico/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U2_Modelos_Desarrollo_Economico/U2_Modelos_Desarrollo_Economico/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Modelos_Desarrollo_Economico/U2_Modelos_Desarrollo_Economico/src/views/curso/Tema5.vue?vue&type=template&id=43387f23&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Modelos_Desarrollo_Economico/U2_Modelos_Desarrollo_Economico/src/views/curso/Tema5.vue","mtime":1743652306245},{"path":"/home/runner/work/U2_Modelos_Desarrollo_Economico/U2_Modelos_Desarrollo_Economico/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Modelos_Desarrollo_Economico/U2_Modelos_Desarrollo_Economico/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Modelos_Desarrollo_Economico/U2_Modelos_Desarrollo_Economico/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Modelos_Desarrollo_Economico/U2_Modelos_Desarrollo_Economico/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Modelos_Desarrollo_Economico/U2_Modelos_Desarrollo_Economico/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXJzby1tYWluLWNvbnRhaW5lciBwYi0zIn0sW19jKCdCYW5uZXJJbnRlcm5vJyx7YXR0cnM6eyJzdWJUaXR1bG8iOic1LiBUYXNhIGRlIGNhbWJpbyd9fSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb250YWluZXIgdGFyamV0YSB0YXJqZXRhLS1ibGFuY2EgcC00IHAtbWQtNSBvdmVyZmxvdy1oaWRkZW4ifSxbX3ZtLl9tKDApLF92bS5fbSgxKSxfdm0uX20oMiksX2MoJ1RhYnNDJyx7c3RhdGljQ2xhc3M6Im1iLTQifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJ0YWJzLWNvbnRlbnQgYm9yZGVyIHB4LTQgcC1tZC01IHB5LTMiLGF0dHJzOnsidGl0dWxvIjoiRMOzbGFyL3Blc28gY29sb21iaWFubyIsImljb24iOnJlcXVpcmUoJ0AvYXNzZXRzL2N1cnNvL3VuaWRhZC9pbWctNDguc3ZnJyl9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJkLW5vbmUgZC1sZy1ibG9jayBjb2wtbWQtMTIgY29sLWxnLTUiLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluIn19LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby91bmlkYWQvaW1nLTQ5LnBuZyIpLCJhbHQiOiJEZXNjcmlwY2nDs24gZGUgbGEgaW1hZ2VuIn19KV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbWQtMTIgY29sLWxnLTcgbWItNCBtYi1tZC0wIn0sW19jKCdoNCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLXVwIn19LFtfdm0uX3YoIkTDs2xhci9wZXNvIGNvbG9tYmlhbm8iKV0pLF9jKCdwJyx7YXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtdXAifX0sW192bS5fdigiSW5kaWNhIGN1w6FudG9zIHBlc29zIHNlIHJlcXVpZXJlbiBwYXJhIG9idGVuZXIgdW4gZMOzbGFyLiBFbiBlc3RlIGNhc28sIHNlcsOtYSAzLDkwMCBDT1AgcG9yIDEgVVNELiIpXSldKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJ0YWJzLWNvbnRlbnQgYm9yZGVyIHB4LTQgcC1tZC01IHB5LTMiLGF0dHJzOnsidGl0dWxvIjoiUGVzbyBjb2xvbWJpYW5vL2TDs2xhciIsImljb24iOnJlcXVpcmUoJ0AvYXNzZXRzL2N1cnNvL3VuaWRhZC9pbWctNDguc3ZnJyl9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJkLW5vbmUgZC1sZy1ibG9jayBjb2wtbWQtMTIgY29sLWxnLTUiLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluIn19LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby91bmlkYWQvaW1nLTUwLnBuZyIpLCJhbHQiOiJEZXNjcmlwY2nDs24gZGUgbGEgaW1hZ2VuIn19KV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbWQtMTIgY29sLWxnLTcgbWItNCBtYi1tZC0wIn0sW19jKCdoNCcse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLXVwIn19LFtfdm0uX3YoIlBlc28gY29sb21iaWFuby9kw7NsYXIiKV0pLF9jKCdwJyx7YXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtdXAifX0sW192bS5fdigiTXVlc3RyYSBjdcOhbnRvcyBkw7NsYXJlcyBzZSByZWNpYmVuIHBvciB1biBwZXNvIGNvbG9tYmlhbm8uIEVuIGVzdGUgZWplbXBsbywgZXF1aXZhbGRyw61hIGEgMC4wMDAyNiBVU0QgcG9yIDEgQ09QLiIpXSldKV0pXSldKSxfdm0uX20oMyksX2MoJ2gyJyxbX3ZtLl92KCJEZXByZWNpYWNpw7NuIHkgYXByZWNpYWNpw7NuIGRlbCB0aXBvIGRlIGNhbWJpbyIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCJ9LFtfdm0uX3YoIkNvbnRpbnVhbmRvIGNvbiBsb3MgY29uY2VwdG9zIGRlIE1vY2jDs24gTW9yY2lsbG8sIEYuICgyMDA2KSwgZWwgdGlwbyBkZSBjYW1iaW8gc2UgZXN0YWJsZWNlIGVuIGVsIG1lcmNhZG8gZGUgZGl2aXNhcywgc2Vnw7puIGxhIG9mZXJ0YSB5IGxhIGRlbWFuZGEsIGxvIHF1ZSBwcm92b2NhIHF1ZSBzdSB2YWxvciBzdWJhIG8gYmFqZSBjb24gZWwgdGllbXBvLiBDdWFuZG8gZWwgdGlwbyBkZSBjYW1iaW8gdmFyw61hLCB1bmEgbW9uZWRhIHB1ZWRlIGdhbmFyIG8gcGVyZGVyIHZhbG9yIGZyZW50ZSBhIG90cmEuIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBwb3NpdGlvbi1yZWxhdGl2ZSBtYi01IHB5LTQgYmctZm9uZG8tc2xpZGVyIGJnLWZ1bGwtd2lkdGgifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJweC00IHB4LW1kLTUgcHktbWQtMyJ9LFtfYygnU2x5ZGVyQScse3N0YXRpY0NsYXNzOiJiZy13aGl0ZSIsYXR0cnM6eyJ0aXBvIjoiYiJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgcC00IHB4LW1kLTUgcHktbGctNSBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1tZC0xMiBjb2wtbGctNyBtYi00IG1iLW1kLTAgZC1mbGV4IGZsZXgtY29sdW1uIGp1c3RpZnktY29udGVudC1jZW50ZXIifSxbX2MoJ3AnLFtfdm0uX3YoIlNpIGVsIHRpcG8gZGUgY2FtYmlvIGVudHJlIGVsIGTDs2xhciB5IGVsIHBlc28gY29sb21iaWFubyBkaXNtaW51eWUsIHNpZ25pZmljYSBxdWUsIGNvbiB1bmEgdW5pZGFkIGRlIGxhIG1vbmVkYSBsb2NhbCwgYWhvcmEgc2UgcHVlZGVuIG9idGVuZXIgbWVub3MgZMOzbGFyZXMgcXVlIGFudGVzLiBQb3IgZWplbXBsbywgc2kgZWwgdGlwbyBkZSBjYW1iaW8gcGFzYSBkZSAiKSxfYygnYicsW192bS5fdigiMSBVU0QgPSA0LDAwMCBDT1AgYSAxIFVTRCA9IDMsODAwIENPUCIpXSksX3ZtLl92KCIsIHNlIGRpY2UgcXVlIGVsIHBlc28gY29sb21iaWFubyBzZSBoYSAiKSxfYygnYicsW192bS5fdigiYXByZWNpYWRvIildKSxfdm0uX3YoIiBmcmVudGUgYWwgZMOzbGFyLCBkYWRvIHF1ZSBhaG9yYSBzZSBuZWNlc2l0YW4gbWVub3MgcGVzb3MgcGFyYSBjb21wcmFyIHVuIGTDs2xhci4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJkLW5vbmUgZC1sZy1ibG9jayBjb2wtbWQtNiBjb2wtbGctNCIsYXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4ifX0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3VuaWRhZC9pbWctNTIucG5nIiksImFsdCI6IlRleHRvIHF1ZSBkZXNjcmliYSBsYSBpbWFnZW4ifX0pXSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IHAtNCBweC1tZC01IHB5LWxnLTUganVzdGlmeS1jb250ZW50LWJldHdlZW4ifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbWQtMTIgY29sLWxnLTcgbWItNCBtYi1tZC0wIGQtZmxleCBmbGV4LWNvbHVtbiBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIn0sW19jKCdwJyxbX3ZtLl92KCJQb3IgZWwgY29udHJhcmlvLCBzaSBlbCB0aXBvIGRlIGNhbWJpbyBzdWJlIGRlICIpLF9jKCdiJyxbX3ZtLl92KCIxIFVTRCA9IDQsMDAwIENPUCBhIDEgVVNEID0gNCwyMDAgQ09QIildKSxfdm0uX3YoIiwgZWwgcGVzbyBjb2xvbWJpYW5vIGhhICIpLF9jKCdiJyxbX3ZtLl92KCJwZXJkaWRvIHZhbG9yIildKSxfdm0uX3YoIiBvIHNlIGhhICIpLF9jKCdiJyxbX3ZtLl92KCJkZXByZWNpYWRvIildKSxfdm0uX3YoIiBmcmVudGUgYWwgZMOzbGFyLiBFc3RvIHNpZ25pZmljYSBxdWUgYWhvcmEgc2UgcmVxdWllcmVuIG3DoXMgcGVzb3MsIHBhcmEgb2J0ZW5lciBsYSBtaXNtYSBjYW50aWRhZCBkZSBkw7NsYXJlcy4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJkLW5vbmUgZC1sZy1ibG9jayBjb2wtbWQtNiBjb2wtbGctNCIsYXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4ifX0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3VuaWRhZC9pbWctNTMucG5nIiksImFsdCI6IlRleHRvIHF1ZSBkZXNjcmliYSBsYSBpbWFnZW4ifX0pXSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IHAtNCBweC1tZC01IHB5LWxnLTUganVzdGlmeS1jb250ZW50LWJldHdlZW4ifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbWQtMTIgY29sLWxnLTcgbWItNCBtYi1tZC0wIGQtZmxleCBmbGV4LWNvbHVtbiBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIn0sW19jKCdwJyxbX3ZtLl92KCJDdWFuZG8gdW5hIG1vbmVkYSBzZSBkZXByZWNpYSwgbG9zIGJpZW5lcyB5IHNlcnZpY2lvcyBkZSBlc2UgcGHDrXMgc2UgdnVlbHZlbiBtw6FzIGVjb27Ds21pY29zIHBhcmEgbG9zIGV4dHJhbmplcm9zLCBsbyBxdWUgcHVlZGUgYmVuZWZpY2lhciBhIGxvcyBleHBvcnRhZG9yZXMuIFBvciBlamVtcGxvLCBzaSBlbCBwZXNvIGNvbG9tYmlhbm8gc2UgZGVwcmVjaWEgZnJlbnRlIGFsIGTDs2xhciwgbG9zIHR1cmlzdGFzIHkgY29tcHJhZG9yZXMgZXN0YWRvdW5pZGVuc2VzIHBvZHLDoW4gYWRxdWlyaXIgbcOhcyBwcm9kdWN0b3MgY29sb21iaWFub3MgY29uIGxhIG1pc21hIGNhbnRpZGFkIGRlIGTDs2xhcmVzLCBsbyBxdWUgcG9kcsOtYSBpbXB1bHNhciBsYXMgdmVudGFzIHkgbG9zIGluZ3Jlc29zIGRlIGxvcyBlbXByZXNhcmlvcyBsb2NhbGVzLiIpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImQtbm9uZSBkLWxnLWJsb2NrIGNvbC1tZC02IGNvbC1sZy00IixhdHRyczp7ImRhdGEtYW9zIjoiem9vbS1pbiJ9fSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdW5pZGFkL2ltZy01NC5wbmciKSwiYWx0IjoiVGV4dG8gcXVlIGRlc2NyaWJhIGxhIGltYWdlbiJ9fSldKV0pXSldKV0sMSldKSxfdm0uX20oNCksX3ZtLl9tKDUpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IG1iLTQifSxbX3ZtLl9tKDYpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLTEyIGNvbC1sZy03IGNvbC14bC04In0sW19jKCdBY29yZGlvbkEnLHthdHRyczp7InRpcG8iOiJiIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImRpdiIsYXR0cnM6eyJ0aXR1bG8iOiJUYXNhIGRlIGNhbWJpbyBub21pbmFsIiwiZGF0YS1hb3MiOiJmYWRlLXVwIn19LFtfYygncCcsW192bS5fdigiRXMgZWwgcHJlY2lvIGRlIHVuYSBtb25lZGEsIGV4cHJlc2FkbyBlbiB0w6lybWlub3MgZGUgb3RyYS4gUmVwcmVzZW50YSBjdcOhbnRhcyB1bmlkYWRlcyBkZSB1bmEgZGl2aXNhLCBzb24gbmVjZXNhcmlhcyBwYXJhIG9idGVuZXIgdW5hIHVuaWRhZCBkZSBvdHJhLiIpLF9jKCdicicpLF9jKCdicicpLF9jKCdiJyxbX3ZtLl92KCJFamVtcGxvLiIpXSksX3ZtLl92KCIgIiksX2MoJ2JyJyksX3ZtLl92KCJTaSBlbCB0aXBvIGRlIGNhbWJpbyBlbnRyZSBlbCBkw7NsYXIgeSBlbCBwZXNvIGNvbG9tYmlhbm8gZXMgZGUgIiksX2MoJ2InLFtfdm0uX3YoIjEgVVNEID0gNCwwMDAgQ09QIildKSxfdm0uX3YoIiwgc2lnbmlmaWNhIHF1ZSBwYXJhIGNvbXByYXIgdW4gZMOzbGFyIHNlIHJlcXVpZXJlbiA0LDAwMCBwZXNvcyBjb2xvbWJpYW5vcy4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJkaXYiLGF0dHJzOnsidGl0dWxvIjoiVGFzYSBkZSBjYW1iaW8gcmVhbCIsImRhdGEtYW9zIjoiZmFkZS11cCJ9fSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCJ9LFtfdm0uX3YoIk1pZGUgZWwgcG9kZXIgYWRxdWlzaXRpdm8gZGUgdW5hIG1vbmVkYSBlbiBjb21wYXJhY2nDs24gY29uIG90cmEsIGNvbnNpZGVyYW5kbyBsb3Mgbml2ZWxlcyBkZSBwcmVjaW9zIGVuIGFtYm9zIHBhw61zZXMuIFNlIHV0aWxpemEgcGFyYSBhbmFsaXphciBsYSBjb21wZXRpdGl2aWRhZCBkZSB1biBwYcOtcyBlbiB0w6lybWlub3MgZGUgY29tZXJjaW8gZXh0ZXJpb3IuIiksX2MoJ2JyJyksX2MoJ2JyJyksX2MoJ2InLFtfdm0uX3YoIkbDs3JtdWxhOiIpXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi00IG1zLTQgbXMteGwtNSJ9LFtfdm0uX3YoIlRDUiA9IFRhc2EgZGUgY2FtYmlvIG5vbWluYWwgeCDDjW5kaWNlIGRlIHByZWNpb3MgbmFjaW9uYWwgLyDDjW5kaWNlIGRlIHByZWNpb3MgZXh0cmFuamVybyIpXSksX2MoJ3NwYW4nLFtfYygnYicpLF92bS5fdigiTWlkZSBlbCBwb2RlciBhZHF1aXNpdGl2byBkZSB1bmEgbW9uZWRhIGVuIGNvbXBhcmFjacOzbiBjb24gb3RyYSwgY29uc2lkZXJhbmRvIGxvcyBuaXZlbGVzIGRlIHByZWNpb3MgZW4gYW1ib3MgcGHDrXNlcy4gU2UgdXRpbGl6YSBwYXJhIGFuYWxpemFyIGxhIGNvbXBldGl0aXZpZGFkIGRlIHVuIHBhw61zIGVuIHTDqXJtaW5vcyBkZSBjb21lcmNpbyBleHRlcmlvci4iKSxfYygnYnInKSxfYygnYnInKSxfYygnYicsW192bS5fdigiRWplbXBsby4iKV0pLF92bS5fdigiIFNpIGVsIHRpcG8gZGUgY2FtYmlvIG5vbWluYWwgZXMgIiksX2MoJ2InLFtfdm0uX3YoIjEgVVNEID0gNCwwMDAgQ09QIildKSxfdm0uX3YoIiwgcGVybyBsYSBpbmZsYWNpw7NuIGVuIENvbG9tYmlhIGVzIG1heW9yIHF1ZSBlbiBFRS5VVS4sIGxhIHRhc2EgZGUgY2FtYmlvIHJlYWwgYWp1c3RhZGEgcmVmbGVqYXLDoSBxdWUgbG9zIGJpZW5lcyBpbXBvcnRhZG9zIHB1ZWRlbiByZXN1bHRhciBtw6FzIGNvc3Rvc29zIGVuIHTDqXJtaW5vcyByZWFsZXMuIildKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiZGl2IixhdHRyczp7InRpdHVsbyI6IlRhc2EgZGUgY2FtYmlvIGZpamEiLCJkYXRhLWFvcyI6ImZhZGUtdXAifX0sW19jKCdwJyxbX3ZtLl92KCJFbiBlc3RlIHNpc3RlbWEsIGVsIGdvYmllcm5vIG8gZWwgYmFuY28gY2VudHJhbCwgZXN0YWJsZWNlIHVuIHRpcG8gZGUgY2FtYmlvIGRldGVybWluYWRvIHkgbG8gbWFudGllbmUgZXN0YWJsZSBtZWRpYW50ZSBsYSBpbnRlcnZlbmNpw7NuIGVuIGVsIG1lcmNhZG8gZGUgZGl2aXNhcy4gUGFyYSBlbGxvLCBjb21wcmEgbyB2ZW5kZSBtb25lZGEgZXh0cmFuamVyYSBwYXJhIG1hbnRlbmVyIGVsIHZhbG9yIGRlbnRybyBkZSB1biByYW5nbyBlc3RhYmxlY2lkby4iKSxfYygnYnInKSxfYygnYnInKSxfYygnYicsW192bS5fdigiRWplbXBsby4iKV0pLF92bS5fdigiIFVuIHBhw61zIGRlY2lkZSBmaWphciBzdSB0aXBvIGRlIGNhbWJpbyBlbiAiKSxfYygnYicsW192bS5fdigiMSBVU0QgPSAzLDUwMCBDT1AiKV0pLF92bS5fdigiIHkgZWwgQmFuY28gZGUgbGEgUmVww7pibGljYSBpbnRlcnZpZW5lIGNvbXByYW5kbyBvIHZlbmRpZW5kbyBkw7NsYXJlcywgcGFyYSBldml0YXIgZmx1Y3R1YWNpb25lcyBlbiBlbCB2YWxvciBkZWwgcGVzby4iKV0pXSldKV0sMSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBtYi00In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLTEyIGNvbC1sZy03IGNvbC14bC04In0sW19jKCdBY29yZGlvbkEnLHthdHRyczp7InRpcG8iOiJiIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImRpdiIsYXR0cnM6eyJ0aXR1bG8iOiJUYXNhIGRlIGNhbWJpbyBmbG90YW50ZSIsImRhdGEtYW9zIjoiZmFkZS11cCJ9fSxbX2MoJ3AnLFtfdm0uX3YoIkVuIGVzdGUgcsOpZ2ltZW4sIGVsIHRpcG8gZGUgY2FtYmlvIHZhcsOtYSBjb25zdGFudGVtZW50ZSwgc2Vnw7puIGxhIG9mZXJ0YSB5IGRlbWFuZGEgZW4gZWwgbWVyY2FkbyBkZSBkaXZpc2FzLCBzaW4gaW50ZXJ2ZW5jacOzbiBkZWwgZ29iaWVybm8uIEVzdGUgc2lzdGVtYSBlcyB1dGlsaXphZG8gcG9yIGxhIG1heW9yw61hIGRlIGxhcyBlY29ub23DrWFzLiIpLF9jKCdicicpLF9jKCdicicpLF9jKCdiJyxbX3ZtLl92KCJFamVtcGxvLiIpXSksX3ZtLl92KCIgU2kgYXVtZW50YSBsYSBkZW1hbmRhIGRlIGTDs2xhcmVzIGVuIENvbG9tYmlhLCBlbCB0aXBvIGRlIGNhbWJpbyBwdWVkZSBzdWJpciBkZSAiKSxfYygnYicsW192bS5fdigiMSBVU0QgPSA0LDAwMCBDT1AgYSAxIFVTRCA9IDQsMjAwIENPUCIpXSksX3ZtLl92KCIsIHJlZmxlamFuZG8gbGEgZGVwcmVjaWFjacOzbiBkZWwgcGVzbyBjb2xvbWJpYW5vLiIpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImRpdiIsYXR0cnM6eyJ0aXR1bG8iOiJUYXNhIGRlIGNhbWJpbyBmbG90YW50ZSBjb250cm9sYWRhIChvIHN1Y2lhKSIsImRhdGEtYW9zIjoiZmFkZS11cCJ9fSxbX2MoJ3AnLFtfdm0uX3YoIkVzIHVuIHNpc3RlbWEgaW50ZXJtZWRpbyBlbiBlbCBxdWUgZWwgdGlwbyBkZSBjYW1iaW8gZmx1Y3TDumEsIHNlZ8O6biBlbCBtZXJjYWRvLCBwZXJvIGVsIEJhbmNvIENlbnRyYWwgaW50ZXJ2aWVuZSBvY2FzaW9uYWxtZW50ZSwgcGFyYSBldml0YXIgY2FtYmlvcyBicnVzY29zIHF1ZSBwdWVkYW4gYWZlY3RhciBsYSBlc3RhYmlsaWRhZCBlY29uw7NtaWNhLiIpLF9jKCdicicpLF9jKCdicicpLF9jKCdiJyxbX3ZtLl92KCJFamVtcGxvLiIpXSksX3ZtLl92KCIgU2kgZWwgdGlwbyBkZSBjYW1iaW8gc3ViZSBkZW1hc2lhZG8gcsOhcGlkbyBkZSAiKSxfYygnYicsW192bS5fdigiMSBVU0QgPSA0LDAwMCBDT1AgYSAxIFVTRCA9IDQsNTAwIENPUCIpXSksX3ZtLl92KCIsIGVsIEJhbmNvIGRlIGxhIFJlcMO6YmxpY2EgcHVlZGUgdmVuZGVyIGTDs2xhcmVzIHBhcmEgZnJlbmFyIGxhIGRldmFsdWFjacOzbiBkZWwgcGVzby4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJkaXYiLGF0dHJzOnsidGl0dWxvIjoiVGFzYSBkZSBjYW1iaW8gcGFyYWxlbGEgbyBtZXJjYWRvIG5lZ3JvIiwiZGF0YS1hb3MiOiJmYWRlLXVwIn19LFtfYygncCcsW192bS5fdigiU3VyZ2UgY3VhbmRvIGV4aXN0ZW4gcmVzdHJpY2Npb25lcyBjYW1iaWFyaWFzIHkgZWwgdGlwbyBkZSBjYW1iaW8gb2ZpY2lhbCBubyByZWZsZWphIGxhIG9mZXJ0YSB5IGRlbWFuZGEgcmVhbCBkZSBsYSBtb25lZGEuIEVuIGVzdG9zIGNhc29zLCBzZSBkZXNhcnJvbGxhIHVuIG1lcmNhZG8gaW5mb3JtYWwgY29uIHVuYSB0YXNhIGRlIGNhbWJpbyBkaWZlcmVudGUuIiksX2MoJ2JyJyksX2MoJ2JyJyksX2MoJ2InLFtfdm0uX3YoIkVqZW1wbG8uIildKSxfdm0uX3YoIiBTaSBlbiBDb2xvbWJpYSBodWJpZXJhIHJlc3RyaWNjaW9uZXMgcGFyYSBsYSBjb21wcmEgZGUgZMOzbGFyZXMsIHBvZHLDrWEgZXhpc3RpciB1biBtZXJjYWRvIHBhcmFsZWxvIGRvbmRlIGVsIHRpcG8gZGUgY2FtYmlvIHNlYSBkaWZlcmVudGUgYWwgb2ZpY2lhbCwgcG9yIGVqZW1wbG8sICIpLF9jKCdiJyxbX3ZtLl92KCIxIFVTRCA9IDQsNTAwIENPUCIpXSksX3ZtLl92KCIsIG1pZW50cmFzIHF1ZSBlbCBvZmljaWFsIHNlIG1hbnRpZW5lIGVuICIpLF9jKCdiJyxbX3ZtLl92KCIxIFVTRCA9IDQsMDAwIENPUCIpXSksX3ZtLl92KCIuIildKV0pXSldLDEpLF92bS5fbSg3KV0pLF92bS5fbSg4KSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi00In0sW192bS5fdigiTGFzIHRhc2FzIGRlIGNhbWJpbyBqdWVnYW4gdW4gcGFwZWwgY3J1Y2lhbCBlbiBlbCBjb21lcmNpbyBpbnRlcm5hY2lvbmFsLCB5YSBxdWUgZGV0ZXJtaW5hbiBlbCB2YWxvciBkZSB1bmEgbW9uZWRhIGVuIHJlbGFjacOzbiBjb24gb3RyYSB5IGFmZWN0YW4gbGEgY29tcGV0aXRpdmlkYWQgZGUgbG9zIHByb2R1Y3RvcyBlbiBsb3MgbWVyY2Fkb3MgZ2xvYmFsZXMuIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBiZy1tYXJyb24gYmctZnVsbC13aWR0aCBweS00IG1iLTQifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJweC01IHBiLW1kLTMgcHktNCBkLWZsZXgifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtMTIgY29sLXhsLTcgZC1mbGV4IHBlLTQgcGUteGwtNSBhbGlnbi1pdGVtcy1jZW50ZXIgZmxleC1jb2x1bW4ifSxbX2MoJ2gyJyx7c3RhdGljQ2xhc3M6Im1iLTQgcGItMiBtZS1hdXRvIn0sW192bS5fdigiUmVsZXZhbmNpYSBkZSBsYXMgdGFzYXMgZGUgY2FtYmlvLCBlbiBlbCBjb21lcmNpbyBpbnRlcm5hY2lvbmFsIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi01IixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS11cCJ9fSxbX3ZtLl92KCJFbiBlbCBQREYgUmVsZXZhbmNpYSBkZSBsYXMgdGFzYXMgZGUgY2FtYmlvIGVuIGVsIGNvbWVyY2lvIGludGVybmFjaW9uYWwgLCBzZSBhbmFsaXphIGPDs21vIGxhcyB2YXJpYWNpb25lcyBjYW1iaWFyaWFzIGluZmx1eWVuIGVuIGxhcyBleHBvcnRhY2lvbmVzLCBsYXMgaW1wb3J0YWNpb25lcyB5IGxhIGludmVyc2nDs24gZXh0cmFuamVyYS4gQWRlbcOhcywgc2UgZXhwbG9yYSBlbCBpbXBhY3RvIGRlIGxhIGludGVydmVuY2nDs24gZGUgbG9zIGJhbmNvcyBjZW50cmFsZXMgeSBsYSByZWxhY2nDs24gZW50cmUgZWwgdGlwbyBkZSBjYW1iaW8sIGxhIGluZmxhY2nDs24geSBlbCBjcmVjaW1pZW50byBlY29uw7NtaWNvLiIpXSksX2MoJ2EnLHtzdGF0aWNDbGFzczoiZC1mbGV4IG1lLWF1dG8gdy1maXQgYmctd2hpdGUgYm94LXNoYWRvdyBjdXJzb3ItcG9pbnRlciIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtdXAiLCJocmVmIjpfdm0ub2J0ZW5lckxpbmsoJy9kb3dubG9hZHMvQW5leG9zX1JlbGV2YW5jaWEgZGUgbGFzIHRhc2FzIGRlIGNhbWJpbywgZW4gZWwgY29tZXJjaW8gaW50ZXJuYWNpb25hbC5wZGYnKSwidGFyZ2V0IjoiX2JsYW5rIn19LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6ImgtMTAwIixzdGF0aWNTdHlsZTp7IndpZHRoIjoiNDhweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9wZGYtaWNvbi1zcXVhcmUuc3ZnIiksImFsdCI6IlRleHRvIHF1ZSBkZXNjcmliYSBsYSBpbWFnZW4ifX0pLF92bS5fbSg5KV0pXSksX3ZtLl9tKDEwKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1mdWxsLXdpZHRoIGJvcmRlci10b3AtOS1henVsIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicHgtNSBwdC01IHBiLTAifSxbX2MoJ2gyJyxbX3ZtLl92KCJNYXRlcmlhbCBjb21wbGVtZW50YXJpbyIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtMTIgY29sLW1kLTYgY29sLWxnLTgifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoiZC1mbGV4IG15LTQifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtZS0zIG1iLWF1dG8gbXQtMSIsc3R5bGU6KHsnbWF4LXdpZHRoJzonMTZweCd9KSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY29tcG9uZW50ZXMvYm9vay5zdmciKX19KSxfYygnYScse3N0YXRpY0NsYXNzOiJ0ZXh0LXNtYWxsIHRleHQtcHJpbWFyeSIsYXR0cnM6eyJ0YXJnZXQiOiJfYmxhbmsiLCJocmVmIjoiaHR0cHM6Ly9kb2kub3JnLzEwLjc0NDAvcmVzNjQuMjAxOC4wMyJ9fSxbX3ZtLl92KCJDYW5kZWxvLVZpYWZhcmEsIEouIE0uLCAmIE92aWVkby1Hw7NtZXosIEEuICgyMDIxKS4gTGEgdGFzYSBkZSBjYW1iaW8geSBzdXMgaW1wYWN0b3MgZW4gbG9zIGFncmVnYWRvcyBlY29uw7NtaWNvcyBjb2xvbWJpYW5vczogdW5hIGFwcm94aW1hY2nDs24gRkFWQVIuIFJldmlzdGEgRmFjdWx0YWQgZGUgQ2llbmNpYXMgRWNvbsOzbWljYXM6IEludmVzdGlnYWNpw7NuIHkgUmVmbGV4acOzbiwgMjkoMiksIDEyMS0xNDIuIildKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6ImQtZmxleCBteS00In0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWUtMyBtYi1hdXRvIG10LTEiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL3lvdXR1YmUtaWNvbi5zdmciKX19KSxfYygnYScse3N0YXRpY0NsYXNzOiJ0ZXh0LXNtYWxsIHRleHQtcHJpbWFyeSIsYXR0cnM6eyJ0YXJnZXQiOiJfYmxhbmsiLCJocmVmIjoiaHR0cHM6Ly95b3V0dS5iZS80bktpNDR4MUpIZz9zaT12N2hsdDUxS1FreU5SR1FYIn19LFtfdm0uX3YoIltWw61kZW9dIFByZWNpb3MgeSB0YXNhcyBkZSBjYW1iaW8uIildKV0pXSksX3ZtLl9tKDExKV0pXSldKV0sMSldLDEpfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW2Z1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgbWItNCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImQtbm9uZSBkLXhsLWJsb2NrIGNvbC14bC00IG14LWF1dG8gbXQtNCBtdC14bC0wIixhdHRyczp7ImRhdGEtYW9zIjoiem9vbS1pbiJ9fSxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby91bmlkYWQvaW1nLTY0LnBuZyIpLCJhbHQiOiJUZXh0byBxdWUgZGVzY3JpYmEgbGEgaW1hZ2VuIn19KV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLTEyIGNvbC14bC04IGQtZmxleCBmbGV4LWNvbHVtbiJ9LFtfYygncCcse3N0YXRpY0NsYXNzOiJtYi00In0sW192bS5fdigiRWwgbWVyY2FkbyBkZSBkaXZpc2FzLCB0YW1iacOpbiBjb25vY2lkbyBjb21vIEZvcmV4IChGb3JlaWduIEV4Y2hhbmdlIE1hcmtldCksIGVzIHVuIHNpc3RlbWEgZ2xvYmFsIGRlc2NlbnRyYWxpemFkbyBlbiBlbCBxdWUgc2UgY29tcHJhbiB5IHNlIHZlbmRlbiBtb25lZGFzIGRlIGRpZmVyZW50ZXMgcGHDrXNlcy4gU3UgZnVuY2nDs24gcHJpbmNpcGFsIGVzIGxhIGRlIGZhY2lsaXRhciBlbCBpbnRlcmNhbWJpbyBkZSBkaXZpc2FzIHBhcmEgZWwgY29tZXJjaW8gaW50ZXJuYWNpb25hbCwgbGEgaW52ZXJzacOzbiBleHRyYW5qZXJhIHkgbGEgZXNwZWN1bGFjacOzbiBmaW5hbmNpZXJhLiBFc3RlIG1lcmNhZG8gb3BlcmEgZW4gZnVuY2nDs24gZGUgbGFzIHRhc2FzIGRlIGNhbWJpbywgbGFzIGN1YWxlcyByZXByZXNlbnRhbiBlbCB2YWxvciBkZSB1bmEgbW9uZWRhIGVuIHTDqXJtaW5vcyBkZSBvdHJhIHkgdmFyw61hbiBjb25zdGFudGVtZW50ZSwgc2Vnw7puIGxhIG9mZXJ0YSB5IGxhIGRlbWFuZGEuIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImQtZmxleCBhbGlnbi1pdGVtcy1zdGFydCBiZy1henVsIHAtNCBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS11cCJ9fSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJtZS0zIixzdGF0aWNTdHlsZTp7IndpZHRoIjoiOTBweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby91bmlkYWQvaW1nLTQ2LnN2ZyIpLCJhbHQiOiJUZXh0byBxdWUgZGVzY3JpYmEgbGEgaW1hZ2VuIn19KSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6Im15LWF1dG8ifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoicGUteGwtMyBtYi0wIn0sW192bS5fdigiTGFzIHRhc2FzIGRlIGNhbWJpbyBwdWVkZW4gc2VyIGZsb3RhbnRlcywgZGV0ZXJtaW5hZGFzIHBvciBlbCBtZXJjYWRvLCBvIGZpamFzLCBlc3RhYmxlY2lkYXMgcG9yIGxvcyBnb2JpZXJub3MgbyBiYW5jb3MgY2VudHJhbGVzLCBsbyBxdWUgaW5mbHV5ZSBkaXJlY3RhbWVudGUgZW4gbGEgY29tcGV0aXRpdmlkYWQgZGUgbGFzIGVtcHJlc2FzLCBsb3MgY29zdG9zIGRlIGltcG9ydGFjacOzbiB5IGV4cG9ydGFjacOzbiwgeSBsYSByZW50YWJpbGlkYWQgZGUgbGFzIGludmVyc2lvbmVzIGludGVybmFjaW9uYWxlcy4iKV0pXSldKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJ0aXR1bG8tc2VndW5kbyIsYXR0cnM6eyJpZCI6InRfNV8xIiwiZGF0YS1hb3MiOiJmbGlwLXVwIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImQtZmxleCJ9LFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOiJtZS0zIn0sW192bS5fdigiNS4xIildKSxfYygnaDInLFtfdm0uX3YoIsK/UXXDqSBzb24gbGFzIHRhc2FzIGRlIGNhbWJpbz8iKV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBtYi00In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLTEyIGNvbC14bC04IixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS11cCJ9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy12ZXJkZSBwLTQgbWItNCJ9LFtfYygnc3BhbicsW192bS5fdigiU2Vnw7puIE1vY2jDs24gTW9yY2lsbG8sIEYuICgyMDA2KSwgZWwgdGlwbyBkZSBjYW1iaW8gZXMgZWwgdmFsb3IgZGUgdW5hIG1vbmVkYSBlbiByZWxhY2nDs24gY29uIG90cmEuIEluZGljYSBjdcOhbnRhcyB1bmlkYWRlcyBkZSB1bmEgZGl2aXNhIGV4dHJhbmplcmEgc2UgbmVjZXNpdGFuIHBhcmEgb2J0ZW5lciB1bmEgdW5pZGFkIGRlIGxhIG1vbmVkYSBsb2NhbC4gR2VuZXJhbG1lbnRlLCBzZSBleHByZXNhIGNvbW8gbGEgY2FudGlkYWQgZGUgbW9uZWRhIGV4dHJhbmplcmEgcG9yIGNhZGEgdW5pZGFkIGRlIGxhIG1vbmVkYSBuYWNpb25hbC4iKV0pXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCJ9LFtfdm0uX3YoIlBvciBlamVtcGxvLCBzaSBlbCB0aXBvIGRlIGNhbWJpbyBlbnRyZSBlbCBkw7NsYXIgZXN0YWRvdW5pZGVuc2UgeSBlbCBwZXNvIGNvbG9tYmlhbm8gZXMgZGUgMSBVU0QgPSAzLDkwMCBDT1AsIHNpZ25pZmljYSBxdWUsIHBhcmEgYWRxdWlyaXIgdW4gZMOzbGFyLCBzZSBkZWJlbiBlbnRyZWdhciAzLDkwMCBwZXNvcyBjb2xvbWJpYW5vcy4gRXN0ZSB0aXBvIGRlIGNhbWJpbyB0YW1iacOpbiBwdWVkZSBleHByZXNhcnNlIGRlIG1hbmVyYSBpbnZlcnNhLCBlcyBkZWNpciwgY3XDoW50b3MgZMOzbGFyZXMgc2Ugb2J0aWVuZW4gcG9yIGNhZGEgcGVzbyBjb2xvbWJpYW5vLiIpXSksX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczoidGV4dC1ib2xkIn0sW192bS5fdigiRXhpc3RlbiBkb3MgbWFuZXJhcyBkZSBwcmVzZW50YXIgZWwgdGlwbyBkZSBjYW1iaW86IildKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLTQgZC1ub25lIGQteGwtYmxvY2siLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluIn19LFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3VuaWRhZC9pbWctNDcucG5nIiksImFsdCI6IlRleHRvIHF1ZSBkZXNjcmliYSBsYSBpbWFnZW4ifX0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImQtZmxleCBhbGlnbi1pdGVtcy1zdGFydCBiZy1henVsIGJnLWZ1bGwtd2lkdGggcC00IGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIgZmxleC1jb2x1bW4gZmxleC1tZC1yb3cgbWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtdXAifX0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWUtMyIsc3RhdGljU3R5bGU6eyJ3aWR0aCI6IjkwcHgifSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdW5pZGFkL2ltZy01MS5zdmciKSwiYWx0IjoiVGV4dG8gZGVzY3JpcHRpdm8gZGUgbGEgaW1hZ2VuIn19KSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6Im15LWF1dG8ifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoicGUteGwtMyBtYi0wIn0sW192bS5fdigiRXN0b3MgdmFsb3JlcyBmbHVjdMO6YW4gY29uc3RhbnRlbWVudGUsIHNlZ8O6biBsYSBvZmVydGEgeSBsYSBkZW1hbmRhIGVuIGVsIG1lcmNhZG8gZGUgZGl2aXNhcy4gIildKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJ0aXR1bG8tc2VndW5kbyIsYXR0cnM6eyJpZCI6InRfNV8yIiwiZGF0YS1hb3MiOiJmbGlwLXVwIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImQtZmxleCJ9LFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOiJtZS0zIn0sW192bS5fdigiNS4yIildKSxfYygnaDInLFtfdm0uX3YoIlRpcG9zIGRlIHRhc2EgZGUgY2FtYmlvIildKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNCJ9LFtfdm0uX3YoIkVsICIpLF9jKCdiJyxbX3ZtLl92KCJ0aXBvIGRlIGNhbWJpbyIpXSksX3ZtLl92KCIgZXMgZWwgdmFsb3IgZGUgdW5hIG1vbmVkYSBlbiByZWxhY2nDs24gY29uIG90cmEgeSBzZSBkZXRlcm1pbmEsIHNlZ8O6biBsYSBvZmVydGEgeSBsYSBkZW1hbmRhLCBlbiBlbCBtZXJjYWRvIGRlIGRpdmlzYXMuIEV4aXN0ZW4gZGlmZXJlbnRlcyB0aXBvcyBkZSB0YXNhcyBkZSBjYW1iaW8sIGRlcGVuZGllbmRvIGRlIGxhIGZvcm1hIGVuIHF1ZSBzZSBlc3RhYmxlY2VuIHkgcmVndWxhbi4gQSBjb250aW51YWNpw7NuLCBzZSBkZXNjcmliZW4gbG9zIHByaW5jaXBhbGVzIHRpcG9zOiIpXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtMTIgY29sLWxnLTUgY29sLXhsLTQgZC1ub25lIGQtbGctYmxvY2siLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluIn19LFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3VuaWRhZC9pbWctNTUucG5nIiksImFsdCI6IlRleHRvIHF1ZSBkZXNjcmliYSBsYSBpbWFnZW4ifX0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtMTIgY29sLWxnLTUgY29sLXhsLTQgZC1ub25lIGQtbGctYmxvY2siLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluIn19LFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3VuaWRhZC9pbWctNTYucG5nIiksImFsdCI6IlRleHRvIHF1ZSBkZXNjcmliYSBsYSBpbWFnZW4ifX0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJ0aXR1bG8tc2VndW5kbyIsYXR0cnM6eyJpZCI6InRfNV8zIiwiZGF0YS1hb3MiOiJmbGlwLXVwIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImQtZmxleCJ9LFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOiJtZS0zIn0sW192bS5fdigiNS4zIildKSxfYygnaDInLFtfdm0uX3YoIlJlbGV2YW5jaWEgZGUgbGFzIHRhc2FzIGRlIGNhbWJpbywgZW4gZWwgY29tZXJjaW8gaW50ZXJuYWNpb25hbCIpXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdwJyx7c3RhdGljQ2xhc3M6InRleHQtc21hbGwgZnMtMTRweCBteS1hdXRvIHB4LTIifSxbX2MoJ3N0cm9uZycsW192bS5fdigiQW5leG8uIildKSxfdm0uX3YoIiBSZWxldmFuY2lhIGRlIGxhcyB0YXNhcyBkZSBjYW1iaW8sIGVuIGVsIGNvbWVyY2lvIGludGVybmFjaW9uYWwiKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiZC1ub25lIGQteGwtYmxvY2sgY29sLXhsLTUgbXgtYXV0byBtdC00IG10LXhsLTAiLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluIn19LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6ImgtMTAwIixhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdW5pZGFkL2ltZy01Ny5wbmciKSwiYWx0IjoiVGV4dG8gcXVlIGRlc2NyaWJhIGxhIGltYWdlbiJ9fSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC0xMiBjb2wtbWQtNiBjb2wtbGctMyJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9tYXRlcmlhbC1jb21wbGVtZW50YXJpby5zdmciKSwiYWx0IjoiSW1hZ2VuIGRlIG1hdGVyaWFsIGNvbXBsZW1lbnRhcmlvIn19KV0pXSl9XQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}